const e="object"==typeof globalThis&&"window"in globalThis;class t{constructor(e,t){this.target=e,this.options=t??{};const l=new C(this.target,this.options);this.academy=new s.ServiceClient(l),this.admin=new i.ServiceClient(l),this.church=new a.ServiceClient(l),this.fund=new n.ServiceClient(l),this.membership=new r.ServiceClient(l),this.outreach=new o.ServiceClient(l),this.staff=new d.ServiceClient(l),this.user=new c.ServiceClient(l)}with(e){return new t(this.target,{...this.options,...e})}}var s,i,a,n,r,o,d,c;function l(e,t){if("string"==typeof t&&t.length>=10&&t.charCodeAt(0)>=48&&t.charCodeAt(0)<=57){const e=new Date(t);if(!isNaN(e.getTime()))return e}return t}function h(e){const t=[];for(const s in e){const i=Array.isArray(e[s])?e[s]:[e[s]];for(const e of i)t.push(`${s}=${encodeURIComponent(e)}`)}return t.join("&")}function u(e){for(const t in e)void 0===e[t]&&delete e[t];return e}(s||(s={})).ServiceClient=class{constructor(e){this.baseClient=e,this.completeCourse=this.completeCourse.bind(this),this.createCourse=this.createCourse.bind(this),this.createCourseWithModules=this.createCourseWithModules.bind(this),this.deleteCourse=this.deleteCourse.bind(this),this.getCourse=this.getCourse.bind(this),this.getCourseWithModules=this.getCourseWithModules.bind(this),this.getProgress=this.getProgress.bind(this),this.listAllCourses=this.listAllCourses.bind(this),this.listCertificates=this.listCertificates.bind(this),this.listCourses=this.listCourses.bind(this),this.submitQuiz=this.submitQuiz.bind(this),this.updateCourse=this.updateCourse.bind(this),this.updateProgress=this.updateProgress.bind(this)}async completeCourse(e){const t={userId:e.userId},s=await this.baseClient.callTypedAPI(`/academy/courses/${encodeURIComponent(e.courseId)}/complete`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async createCourse(e){const t=await this.baseClient.callTypedAPI("/admin/academy/courses",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async createCourseWithModules(e){const t=await this.baseClient.callTypedAPI("/admin/academy/courses/full",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async deleteCourse(e){const t=await this.baseClient.callTypedAPI(`/admin/academy/courses/${encodeURIComponent(e.id)}`,{method:"DELETE",body:void 0});return JSON.parse(await t.text(),l)}async getCourse(e){const t=u({userId:e.userId}),s=await this.baseClient.callTypedAPI(`/academy/courses/${encodeURIComponent(e.id)}`,{query:t,method:"GET",body:void 0});return JSON.parse(await s.text(),l)}async getCourseWithModules(e){const t=await this.baseClient.callTypedAPI(`/admin/academy/courses/${encodeURIComponent(e.id)}/full`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async getProgress(e){const t=await this.baseClient.callTypedAPI(`/academy/progress/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async listAllCourses(){const e=await this.baseClient.callTypedAPI("/admin/academy/courses",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listCertificates(e){const t=await this.baseClient.callTypedAPI(`/academy/certificates/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async listCourses(){const e=await this.baseClient.callTypedAPI("/academy/courses",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async submitQuiz(e){const t={answers:e.answers,userId:e.userId},s=await this.baseClient.callTypedAPI(`/academy/courses/${encodeURIComponent(e.courseId)}/quiz/submit`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async updateCourse(e){const t={category:e.category,description:e.description,durationMinutes:e.durationMinutes,isPremium:e.isPremium,isPublished:e.isPublished,pdfUrl:e.pdfUrl,thumbnailUrl:e.thumbnailUrl,title:e.title,videoUrl:e.videoUrl},s=await this.baseClient.callTypedAPI(`/admin/academy/courses/${encodeURIComponent(e.id)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async updateProgress(e){const t={progressPercentage:e.progressPercentage,userId:e.userId},s=await this.baseClient.callTypedAPI(`/academy/courses/${encodeURIComponent(e.courseId)}/progress`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}},(i||(i={})).ServiceClient=class{constructor(e){this.baseClient=e,this.createComplianceCategory=this.createComplianceCategory.bind(this),this.createComplianceItem=this.createComplianceItem.bind(this),this.getTerms=this.getTerms.bind(this),this.listCompliance=this.listCompliance.bind(this),this.updateComplianceCategory=this.updateComplianceCategory.bind(this),this.updateComplianceItem=this.updateComplianceItem.bind(this),this.updateComplianceItemDetails=this.updateComplianceItemDetails.bind(this),this.updateTerms=this.updateTerms.bind(this)}async createComplianceCategory(e){const t=await this.baseClient.callTypedAPI("/admin/compliance/categories",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async createComplianceItem(e){const t=await this.baseClient.callTypedAPI("/admin/compliance/items",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async getTerms(e){const t=await this.baseClient.callTypedAPI(`/admin/terms/${encodeURIComponent(e.documentType)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async listCompliance(){const e=await this.baseClient.callTypedAPI("/admin/compliance",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async updateComplianceCategory(e){const t={color:e.color,description:e.description,displayOrder:e.displayOrder,icon:e.icon,name:e.name},s=await this.baseClient.callTypedAPI(`/admin/compliance/categories/${encodeURIComponent(e.id)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async updateComplianceItem(e){const t={completedBy:e.completedBy,isCompleted:e.isCompleted,notes:e.notes},s=await this.baseClient.callTypedAPI(`/admin/compliance/items/${encodeURIComponent(e.id)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async updateComplianceItemDetails(e){const t={description:e.description,displayOrder:e.displayOrder,dueDate:e.dueDate,isRequired:e.isRequired,name:e.name},s=await this.baseClient.callTypedAPI(`/admin/compliance/items/${encodeURIComponent(e.id)}/details`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async updateTerms(e){const t={content:e.content},s=await this.baseClient.callTypedAPI(`/admin/terms/${encodeURIComponent(e.documentType)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}},(a||(a={})).ServiceClient=class{constructor(e){this.baseClient=e,this.createEvent=this.createEvent.bind(this),this.createTeaching=this.createTeaching.bind(this),this.deleteEvent=this.deleteEvent.bind(this),this.deleteTeaching=this.deleteTeaching.bind(this),this.getTeaching=this.getTeaching.bind(this),this.getTestimonyUploadUrl=this.getTestimonyUploadUrl.bind(this),this.listAllEvents=this.listAllEvents.bind(this),this.listAllTeachings=this.listAllTeachings.bind(this),this.listEvents=this.listEvents.bind(this),this.listPrayerReplies=this.listPrayerReplies.bind(this),this.listPrayerRequests=this.listPrayerRequests.bind(this),this.listTeachings=this.listTeachings.bind(this),this.listTestimoniesAdmin=this.listTestimoniesAdmin.bind(this),this.replyPrayerRequest=this.replyPrayerRequest.bind(this),this.reviewTestimony=this.reviewTestimony.bind(this),this.submitPrayerRequest=this.submitPrayerRequest.bind(this),this.submitTestimony=this.submitTestimony.bind(this),this.updateEvent=this.updateEvent.bind(this),this.updateTeaching=this.updateTeaching.bind(this)}async createEvent(e){const t=await this.baseClient.callTypedAPI("/admin/church/events",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async createTeaching(e){const t=await this.baseClient.callTypedAPI("/admin/church/teachings",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async deleteEvent(e){const t=await this.baseClient.callTypedAPI(`/admin/church/events/${encodeURIComponent(e.id)}`,{method:"DELETE",body:void 0});return JSON.parse(await t.text(),l)}async deleteTeaching(e){const t=await this.baseClient.callTypedAPI(`/admin/church/teachings/${encodeURIComponent(e.id)}`,{method:"DELETE",body:void 0});return JSON.parse(await t.text(),l)}async getTeaching(e){const t=await this.baseClient.callTypedAPI(`/church/teachings/${encodeURIComponent(e.slug)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async getTestimonyUploadUrl(e){const t=await this.baseClient.callTypedAPI("/church/testimonies/upload-url",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async listAllEvents(){const e=await this.baseClient.callTypedAPI("/admin/church/events",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listAllTeachings(){const e=await this.baseClient.callTypedAPI("/admin/church/teachings",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listEvents(){const e=await this.baseClient.callTypedAPI("/church/events",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listPrayerReplies(e){const t=u({email:e.email}),s=await this.baseClient.callTypedAPI("/church/prayer-replies",{query:t,method:"GET",body:void 0});return JSON.parse(await s.text(),l)}async listPrayerRequests(){const e=await this.baseClient.callTypedAPI("/church/prayer-requests",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listTeachings(){const e=await this.baseClient.callTypedAPI("/church/teachings",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listTestimoniesAdmin(){const e=await this.baseClient.callTypedAPI("/admin/church/testimonies",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async replyPrayerRequest(e){const t={message:e.message,responderEmail:e.responderEmail,responderName:e.responderName},s=await this.baseClient.callTypedAPI(`/church/prayer-requests/${encodeURIComponent(e.id)}/reply`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async reviewTestimony(e){const t={approve:e.approve,notes:e.notes,reviewerId:e.reviewerId},s=await this.baseClient.callTypedAPI(`/admin/church/testimonies/${encodeURIComponent(e.id)}/review`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async submitPrayerRequest(e){const t=await this.baseClient.callTypedAPI("/church/prayer-requests",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async submitTestimony(e){const t=await this.baseClient.callTypedAPI("/church/testimonies",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async updateEvent(e){const t={description:e.description,endDate:e.endDate,eventType:e.eventType,isPublished:e.isPublished,locationName:e.locationName,startDate:e.startDate,title:e.title,virtualLink:e.virtualLink},s=await this.baseClient.callTypedAPI(`/admin/church/events/${encodeURIComponent(e.id)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async updateTeaching(e){const t={authorId:e.authorId,category:e.category,content:e.content,excerpt:e.excerpt,featuredImageUrl:e.featuredImageUrl,isPublished:e.isPublished,publishedAt:e.publishedAt,slug:e.slug,title:e.title},s=await this.baseClient.callTypedAPI(`/admin/church/teachings/${encodeURIComponent(e.id)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}},(n||(n={})).ServiceClient=class{constructor(e){this.baseClient=e,this.approveNeed=this.approveNeed.bind(this),this.createDonation=this.createDonation.bind(this),this.financeStream=this.financeStream.bind(this),this.getBalance=this.getBalance.bind(this),this.listNeeds=this.listNeeds.bind(this),this.listTransactions=this.listTransactions.bind(this),this.rejectNeed=this.rejectNeed.bind(this),this.submitFundingRequest=this.submitFundingRequest.bind(this)}async approveNeed(e){const t={reviewerId:e.reviewerId},s=await this.baseClient.callTypedAPI(`/fund/needs/${encodeURIComponent(e.id)}/approve`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async createDonation(e){const t=await this.baseClient.callTypedAPI("/fund/donations",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async financeStream(){return await this.baseClient.createStreamIn("/fund/finance/stream")}async getBalance(){const e=await this.baseClient.callTypedAPI("/fund/balance",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listNeeds(){const e=await this.baseClient.callTypedAPI("/fund/needs",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listTransactions(){const e=await this.baseClient.callTypedAPI("/fund/transactions",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async rejectNeed(e){const t={reason:e.reason,reviewerId:e.reviewerId},s=await this.baseClient.callTypedAPI(`/fund/needs/${encodeURIComponent(e.id)}/reject`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async submitFundingRequest(e){const t=await this.baseClient.callTypedAPI("/fund/requests",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}},(r||(r={})).ServiceClient=class{constructor(e){this.baseClient=e,this.cancelSubscription=this.cancelSubscription.bind(this),this.getSubscription=this.getSubscription.bind(this),this.listPlans=this.listPlans.bind(this),this.subscribe=this.subscribe.bind(this)}async cancelSubscription(e){const t=await this.baseClient.callTypedAPI(`/membership/subscription/${encodeURIComponent(e.userId)}/cancel`,{method:"POST",body:void 0});return JSON.parse(await t.text(),l)}async getSubscription(e){const t=await this.baseClient.callTypedAPI(`/membership/subscription/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async listPlans(){const e=await this.baseClient.callTypedAPI("/membership/plans",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async subscribe(e){const t=await this.baseClient.callTypedAPI("/membership/subscribe",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}},(o||(o={})).ServiceClient=class{constructor(e){this.baseClient=e,this.approveWithdrawal=this.approveWithdrawal.bind(this),this.createGuide=this.createGuide.bind(this),this.getDownline=this.getDownline.bind(this),this.getProfile=this.getProfile.bind(this),this.getStats=this.getStats.bind(this),this.joinProgram=this.joinProgram.bind(this),this.listGuides=this.listGuides.bind(this),this.listLeaderboard=this.listLeaderboard.bind(this),this.listPayouts=this.listPayouts.bind(this),this.listProfiles=this.listProfiles.bind(this),this.listWithdrawals=this.listWithdrawals.bind(this),this.seedNetwork=this.seedNetwork.bind(this)}async approveWithdrawal(e){const t=await this.baseClient.callTypedAPI(`/outreach/withdrawals/${encodeURIComponent(e.id)}/approve`,{method:"POST",body:void 0});return JSON.parse(await t.text(),l)}async createGuide(e){const t=await this.baseClient.callTypedAPI("/outreach/guides",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async getDownline(e){const t=await this.baseClient.callTypedAPI(`/outreach/downline/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async getProfile(e){const t=await this.baseClient.callTypedAPI(`/outreach/profile/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async getStats(e){const t=await this.baseClient.callTypedAPI(`/outreach/stats/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async joinProgram(e){const t=await this.baseClient.callTypedAPI("/outreach/join",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async listGuides(){const e=await this.baseClient.callTypedAPI("/outreach/guides",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listLeaderboard(e){const t=u({limit:void 0===e.limit?void 0:String(e.limit)}),s=await this.baseClient.callTypedAPI("/outreach/leaderboard",{query:t,method:"GET",body:void 0});return JSON.parse(await s.text(),l)}async listPayouts(e){const t=await this.baseClient.callTypedAPI(`/outreach/payouts/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async listProfiles(){const e=await this.baseClient.callTypedAPI("/outreach/profiles",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async listWithdrawals(){const e=await this.baseClient.callTypedAPI("/outreach/withdrawals",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async seedNetwork(){const e=await this.baseClient.callTypedAPI("/outreach/seed",{method:"POST",body:void 0});return JSON.parse(await e.text(),l)}},(d||(d={})).ServiceClient=class{constructor(e){this.baseClient=e,this.createStaff=this.createStaff.bind(this),this.getCompliance=this.getCompliance.bind(this),this.getDocUploadUrl=this.getDocUploadUrl.bind(this),this.listStaff=this.listStaff.bind(this),this.sendForms=this.sendForms.bind(this),this.updateStaff=this.updateStaff.bind(this)}async createStaff(e){const t=await this.baseClient.callTypedAPI("/admin/staff",{method:"POST",body:JSON.stringify(e)});return JSON.parse(await t.text(),l)}async getCompliance(e){const t=await this.baseClient.callTypedAPI(`/admin/staff/${encodeURIComponent(e.id)}/compliance`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async getDocUploadUrl(e){const t={docType:e.docType,fileExtension:e.fileExtension},s=await this.baseClient.callTypedAPI(`/admin/staff/${encodeURIComponent(e.staffId)}/doc-upload-url`,{method:"POST",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}async listStaff(){const e=await this.baseClient.callTypedAPI("/admin/staff",{method:"GET",body:void 0});return JSON.parse(await e.text(),l)}async sendForms(e){const t=await this.baseClient.callTypedAPI(`/admin/staff/${encodeURIComponent(e.id)}/send-forms`,{method:"POST",body:void 0});return JSON.parse(await t.text(),l)}async updateStaff(e){const t={avatarUrl:e.avatarUrl,backgroundCheckCompleted:e.backgroundCheckCompleted,blueCardExpiry:e.blueCardExpiry,blueCardNumber:e.blueCardNumber,driversLicenseFrontUrl:e.driversLicenseFrontUrl,email:e.email,fullName:e.fullName,mobile:e.mobile,paid:e.paid,policeCheckCompleted:e.policeCheckCompleted,policyAcknowledged:e.policyAcknowledged,trainingCompletedManual:e.trainingCompletedManual,userId:e.userId,wantsChildrenWork:e.wantsChildrenWork,wantsMinistryTeam:e.wantsMinistryTeam},s=await this.baseClient.callTypedAPI(`/admin/staff/${encodeURIComponent(e.id)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}},(c||(c={})).ServiceClient=class{constructor(e){this.baseClient=e,this.getProfile=this.getProfile.bind(this),this.updateProfile=this.updateProfile.bind(this)}async getProfile(e){const t=await this.baseClient.callTypedAPI(`/user/profile/${encodeURIComponent(e.userId)}`,{method:"GET",body:void 0});return JSON.parse(await t.text(),l)}async updateProfile(e){const t={email:e.email,name:e.name,usdtWalletAddress:e.usdtWalletAddress},s=await this.baseClient.callTypedAPI(`/user/profile/${encodeURIComponent(e.userId)}`,{method:"PUT",body:JSON.stringify(t)});return JSON.parse(await s.text(),l)}};class p{constructor(e,t){this.hasUpdateHandlers=[];let s=["encore-ws"];t&&s.push(function(e){return"encore.dev.headers."+btoa(JSON.stringify(e)).replaceAll("=","").replaceAll("+","-").replaceAll("/","_")}(t)),this.ws=new WebSocket(e,s),this.on("error",()=>{this.resolveHasUpdateHandlers()}),this.on("close",()=>{this.resolveHasUpdateHandlers()})}resolveHasUpdateHandlers(){const e=this.hasUpdateHandlers;this.hasUpdateHandlers=[];for(const t of e)t()}async hasUpdate(){await new Promise(e=>{this.hasUpdateHandlers.push(()=>e(null))})}on(e,t){this.ws.addEventListener(e,t)}off(e,t){this.ws.removeEventListener(e,t)}close(){this.ws.close()}}class y{constructor(e,t){this.buffer=[],this.socket=new p(e,t),this.socket.on("message",e=>{this.buffer.push(JSON.parse(e.data,l)),this.socket.resolveHasUpdateHandlers()})}close(){this.socket.close()}async send(e){return this.socket.ws.readyState===WebSocket.CONNECTING&&await new Promise(e=>{this.socket.ws.addEventListener("open",e,{once:!0})}),this.socket.ws.send(JSON.stringify(e))}async next(){for await(const e of this)return e}async*[Symbol.asyncIterator](){for(;;)if(this.buffer.length>0)yield this.buffer.shift();else{if(this.socket.ws.readyState===WebSocket.CLOSED)return;await this.socket.hasUpdate()}}}class m{constructor(e,t){this.buffer=[],this.socket=new p(e,t),this.socket.on("message",e=>{this.buffer.push(JSON.parse(e.data,l)),this.socket.resolveHasUpdateHandlers()})}close(){this.socket.close()}async next(){for await(const e of this)return e}async*[Symbol.asyncIterator](){for(;;)if(this.buffer.length>0)yield this.buffer.shift();else{if(this.socket.ws.readyState===WebSocket.CLOSED)return;await this.socket.hasUpdate()}}}class b{constructor(e,t){let s;this.responseValue=new Promise(e=>s=e),this.socket=new p(e,t),this.socket.on("message",e=>{s(JSON.parse(e.data,l))})}async response(){return this.responseValue}close(){this.socket.close()}async send(e){return this.socket.ws.readyState===WebSocket.CONNECTING&&await new Promise(e=>{this.socket.ws.addEventListener("open",e,{once:!0})}),this.socket.ws.send(JSON.stringify(e))}}const w=fetch.bind(void 0);class C{constructor(t,s){this.baseURL=t,this.headers={},e||(this.headers["User-Agent"]="-Generated-TS-Client (Encore/1.48.8)"),this.requestInit=s.requestInit??{},void 0!==s.fetcher?this.fetcher=s.fetcher:this.fetcher=w}async getAuthData(){}async createStreamInOut(e,t){let{query:s,headers:i}=t??{};const a=await this.getAuthData();a&&(a.query&&(s={...s,...a.query}),a.headers&&(i={...i,...a.headers}));const n=s?"?"+h(s):"";return new y(this.baseURL+e+n,i)}async createStreamIn(e,t){let{query:s,headers:i}=t??{};const a=await this.getAuthData();a&&(a.query&&(s={...s,...a.query}),a.headers&&(i={...i,...a.headers}));const n=s?"?"+h(s):"";return new m(this.baseURL+e+n,i)}async createStreamOut(e,t){let{query:s,headers:i}=t??{};const a=await this.getAuthData();a&&(a.query&&(s={...s,...a.query}),a.headers&&(i={...i,...a.headers}));const n=s?"?"+h(s):"";return new b(this.baseURL+e+n,i)}async callTypedAPI(e,t){return this.callAPI(e,{...t,headers:{"Content-Type":"application/json",...null==t?void 0:t.headers}})}async callAPI(e,t){let{query:s,headers:i,...a}=t??{};const n={...this.requestInit,...a};n.headers={...this.headers,...n.headers,...i};const r=await this.getAuthData();r&&(r.query&&(s={...s,...r.query}),r.headers&&(n.headers={...n.headers,...r.headers}));const o=s?"?"+h(s):"",d=await this.fetcher(this.baseURL+e+o,n);if(!d.ok){let e={code:"unknown",message:`request failed: status ${d.status}`};try{const t=await d.text();try{const s=JSON.parse(t);null==(c=s)||(void 0===(l=c.code)||!Object.values(S).includes(l))||"string"!=typeof c.message||void 0!==c.details&&null!==c.details&&"object"!=typeof c.details?e.message+=": "+JSON.stringify(s):e=s}catch{e.message+=": "+t}}catch(u){e.message+=": "+String(u)}throw new T(d.status,e)}var c,l;return d}}class T extends Error{constructor(e,t){super(t.message),Object.defineProperty(this,"name",{value:"APIError",enumerable:!1,configurable:!0}),null==Object.setPrototypeOf?this.__proto__=T.prototype:Object.setPrototypeOf(this,T.prototype),void 0!==Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.status=e,this.code=t.code,this.details=t.details}}var S=(e=>(e.OK="ok",e.Canceled="canceled",e.Unknown="unknown",e.InvalidArgument="invalid_argument",e.DeadlineExceeded="deadline_exceeded",e.NotFound="not_found",e.AlreadyExists="already_exists",e.PermissionDenied="permission_denied",e.ResourceExhausted="resource_exhausted",e.FailedPrecondition="failed_precondition",e.Aborted="aborted",e.OutOfRange="out_of_range",e.Unimplemented="unimplemented",e.Internal="internal",e.Unavailable="unavailable",e.DataLoss="data_loss",e.Unauthenticated="unauthenticated",e))(S||{});const g=new t("http://localhost:4000/api",{requestInit:{credentials:"include",mode:"cors"}});export{g as c};
