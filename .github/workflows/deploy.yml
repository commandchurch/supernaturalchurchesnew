name: Deploy to Production

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  deploy-backend:
    name: Deploy Convex Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Convex CLI
        run: npm install -g convex

      - name: Deploy to Convex
        env:
          CONVEX_DEPLOY_KEY: ${{ secrets.CONVEX_DEPLOY_KEY }}
        run: npx convex deploy --yes

  deploy-frontend:
    name: Deploy Vercel Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        working-directory: ./frontend
        run: bun install

      - name: Build frontend
        working-directory: ./frontend
        run: bun run build

      - name: Deploy to Vercel
        working-directory: ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm install -g vercel
          vercel pull --yes --environment=production --token=$VERCEL_TOKEN
          vercel build --prod --token=$VERCEL_TOKEN
          vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

  test-deployment:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: github.event_name == 'push'
    steps:
      - name: Health Check
        run: |
          echo "âœ… Backend deployed to Convex"
          echo "âœ… Frontend deployed to Vercel"
          echo "ðŸš€ Deployment pipeline completed successfully!"
